server:
#  port: 8084
  port: 0

spring:
  application:
    name: chat-proxy-service
  kafka:
    bootstrap-servers: localhost:9091
#    bootstrap-servers: 192.168.20.116:9091
    consumer:
      group-id: my-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    topic:
      chat: chat
  datasource:
    url: jdbc:mysql://localhost:3306/chat_local
    username: root
    password: wnsvaf309
    driver-class-name: com.mysql.cj.jdbc.Driver
logging:
  charset:
    console: UTF-8
    file: UTF-8

  pattern:
    console: "[%X{transactionId}] : [%X{threadId}] %d{yyyy-MM-dd HH:mm:ss.SSS} %highlight(%-5level) ---- [%-10.10thread] %cyan([%logger{0}:%line] %M)  %marker %msg%n"
    file:  "%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level ---- [%-10.10thread] [%logger{0}:%line] %M  %marker %msg%n"

  level:
    com.zaxxer.hikari.HikariConfig: WARN
    com.zaxxer.hikari: WARN
    org:
      springframework:
        security: DEBUG
      org:
        springframework:
          web: DEBUG

      hibernate:
        SQL: debug
        type:
          descriptor:
            sql: INFO
    root: INFO
redis:
  host: redis://localhost:6379
  key:
    room: "chat:room:"
    join-server: "chat:room:join-server"
    user: "connected:user"

eureka:
  instance:
    instance-id: ${spring.cloud.client.ip-address}:${random.value}
#    instance-id: ${spring.cloud.client.ip-address}:${server.port}
    prefer-ip-address: true
  client:
    service-url:
      defaultZone: http://127.0.0.1:8761/eureka
